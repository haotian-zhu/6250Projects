{"version":3,"sources":["service.js","components/FilmPosterDisplay.jsx","components/FilmDetail.jsx","components/SearchFilm.jsx","components/LoginPage.jsx","components/LogOut.jsx","components/CommentedFilms.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["TMDB_API_KEY","TMDB_BASE_URL","service","fetchTopRatedFilmInfo","page","fetch","catch","Promise","reject","error","then","response","ok","json","err","fetchSingleFilmInfo","filmId","method","console","log","fetchFilmByName","name","fetchTranslation","language","comment","fetchSession","fetchLogin","username","headers","Headers","body","JSON","stringify","fetchLogout","fetchAddCommentedFilm","film","fetchCommentedFilmList","module","exports","FilmPosterDisplay","props","className","films","map","original_title","onClick","getFilmInfo","id","src","poster_path","alt","width","FilmDetail","useState","setLanguage","originalComment","setoriginalComment","myComment","Rating","vote_average","vote_count","Genre","genres","genre","slice","release_date","homepage","overview","onChange","e","target","value","type","onInput","placeholder","convertComment","goBack","href","SearchFilm","inputValue","setinputValue","updateStatus","updateInput","LoginPage","loginPrompt","setloginPrompt","toUpperCase","updateLoginStatus","updateUserName","LogOut","changeStatus","CommentedFilms","Object","keys","require","App","CurrentTime","Date","toLocaleString","setPage","done","setDone","searchPage","setSearchPage","filmName","setFilmName","userName","setUserName","isLoggedIn","setIsLoggedIn","results","fetchedFilms","setFetchedFilms","onInfoPage","setonInfoPage","onSearch","setOnSearch","convertedComment","setConvertedComment","commentedFilms","setCommentedFilms","posterpath","setFilm","useEffect","status","disabled","length","converted","tmp_film","push","text","Done","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1af406fd.chunk.js","sourcesContent":["const TMDB_API_KEY = 'cafd6cd4719d144ceca562aaa9ae0f0a';\nconst TMDB_BASE_URL = 'https://api.themoviedb.org/3/movie';\nconst SEARCH_BASE_URL = 'https://api.themoviedb.org/3/search/movie';\nconst TRANSLATION_BASE_URL = 'https://translate.yandex.net/api/v1.5/tr.json/translate';\nconst TRANSLATION_API_KEY = \"trnsl.1.1.20211212T030529Z.c87dad5e0d5e167b.89ee37b405a5ceb522dd38e49c21248d16d3693b\"\n\nfunction fetchTopRatedFilmInfo(page) {\n    return fetch(`${TMDB_BASE_URL}/top_rated?api_key=${TMDB_API_KEY}&language=en-US&page=${page}`)\n    .catch( () => Promise.reject({ error: 'networkError' }) )\n    .then( response => {\n      if (response.ok) {\n        return response.json();\n      }\n      return response.json()\n      .catch( error => Promise.reject({ error }) )\n      .then( err => Promise.reject(err) );\n    });\n  }\n  function fetchFilmByName(name,page){\n    return fetch(`${SEARCH_BASE_URL}?api_key=${TMDB_API_KEY}&query=${name}&page=${page}`, \n    {method: 'GET'})\n    .catch( () => Promise.reject({ error: 'networkError' }) )\n    .then( response => {\n      if (response.ok) {\n       return response.json();\n      }\n      return response.json()\n      .catch( error => {Promise.reject({ error }) \n      console.log(error)})\n      .then( err => Promise.reject(err) );\n    });\n  }\n  function fetchSingleFilmInfo(filmId) {\n    return fetch(`${TMDB_BASE_URL}/${filmId}?api_key=${TMDB_API_KEY}`, \n    {method: 'GET'})\n    .catch( () => Promise.reject({ error: 'networkError' }) )\n    .then( response => {\n      if (response.ok) {\n       return response.json();\n      }\n      return response.json()\n      .catch( error => {Promise.reject({ error }) \n      console.log(error)})\n      .then( err => Promise.reject(err) );\n    });\n  }\n  function fetchTranslation(language, comment) {\n    return fetch(`${TRANSLATION_BASE_URL}?key=${TRANSLATION_API_KEY}&text=${comment}&lang=${language}`, \n    {method: 'GET'})\n    .catch( () => Promise.reject({ error: 'networkError' }) )\n    .then( response => {\n      if (response.ok) {\n       return response.json();\n      }\n      return response.json()\n      .catch( error => {Promise.reject({ error }) \n      console.log(error)})\n      .then( err => Promise.reject(err) );\n    });\n  }\n  function fetchLogin(username) {\n    return fetch('/api/session', {\n      method: 'POST',\n      headers: new Headers({\n        'content-type': 'application/json'\n      }),\n      body: JSON.stringify({ username }),\n    })\n    .catch( () => Promise.reject({ error: 'networkError' }) )\n    .then( response => {\n      if (response.ok) {\n        return response.json();\n      }\n      return response.json()\n      .catch( error => Promise.reject({ error }) )\n      .then( err => Promise.reject(err) );\n    });\n  }\n  function fetchSession() {\n    return fetch('/api/session', {\n      method: 'GET',\n    })\n    .catch( () => Promise.reject({ error: 'networkError' }) )\n    .then( response => {\n      if (response.ok) {\n        return response.json();\n      }\n      return response.json()\n      .catch( error => Promise.reject({ error }) )\n      .then( err => Promise.reject(err) );\n    });\n  }\n  function fetchLogout() {\n    return fetch('/api/session', {\n      method: 'DELETE',\n    })\n    .catch( () => Promise.reject({ error: 'networkError' }) )\n    .then( response => {\n      if (response.ok) {\n        return response.json();\n      }\n      return response.json()\n      .catch( error => Promise.reject({ error }) )\n      .then( err => Promise.reject(err) );\n    });\n  }\n  function fetchCommentedFilmList() {\n    return fetch('/api/commentedFilms')\n    .catch( () => Promise.reject({ error: 'networkError' }) )\n    .then( response => {\n      if (response.ok) {\n        return response.json();\n      }\n      return response.json()\n      .catch( error => Promise.reject({ error }) )\n      .then( err => Promise.reject(err) );\n    });\n  }\n  function fetchAddCommentedFilm(film) {\n    return fetch('/api/commentedFilms', {\n      method: 'POST',\n      headers: new Headers({\n        'content-type': 'application/json',\n      }),\n      body: JSON.stringify( { film } ),\n    })\n    .catch( () => Promise.reject({ error: 'networkError' }) )\n    .then( response => {\n      console.log(response);\n      if (response.ok) {\n        return response.json();\n      }\n      return response.json()\n      .catch( error => Promise.reject({ error }) )\n      .then( err => Promise.reject(err) );\n    });\n  }\n  const service = {\n    fetchTopRatedFilmInfo,\n    fetchSingleFilmInfo,\n    fetchFilmByName,\n    fetchTranslation,\n    fetchSession,\n    fetchLogin,\n    fetchLogout,\n    fetchAddCommentedFilm,\n    fetchCommentedFilmList\n};\n  module.exports = service;","import React from 'react'\n// const API_KEY = 'cafd6cd4719d144ceca562aaa9ae0f0a';\n// const BASE_URL = 'https://api.themoviedb.org/3/movie';\n//onClick = {props.getFilmInfo(film.id)}\nconst IMAGE_BASE_URL = 'https://image.tmdb.org/t/p/original/';\nfunction FilmPosterDisplay(props) {\n    return (\n        <div className = 'TopRatedFilmContainer'>\n            \n           {props.films.map((film) => \n           <>\n           \n             <div className = 'film' key = {film.id} name = {film.original_title} \n             onClick = {() => props.getFilmInfo(film.id) }>\n                   <img  src={IMAGE_BASE_URL + film.poster_path}\n                       alt= {film.id}\n                       key = {film.id}\n                       width=\"190\" \n                       \n                       ></img>\n                <span id ={film.id} className = \"DisplayFilmName\">{film.original_title}</span>\n               </div>\n               \n             \n           </>\n               )}\n        </div>\n    )\n}\n\nexport default FilmPosterDisplay\n","/* eslint-disable array-callback-return */\nimport React from 'react'\n//import  ReactDOM  from 'react-dom';\nimport { useState } from 'react';\n\nfunction FilmDetail(props) {\n    const [language, setLanguage] = useState(\"en\");\n    const [originalComment, setoriginalComment] = useState('');\n    //const [haveComment,setHaveComment] = useState(false);\n    const film = props.film;\n    if(!film.myComment){film.myComment = [];}\n    const IMAGE_BASE_URL = 'https://image.tmdb.org/t/p/original/';\n    const Rating = `Average Rating: ${film.vote_average} \\n Voted By ${film.vote_count} User(s)`;\n    let Genre = 'Genre: ';\n    // eslint-disable-next-line array-callback-return\n    film.genres.map((genre)=>{\n        Genre += `${genre.name}, `;\n    })\n    Genre = Genre.slice(0,-2); \n    return (\n        <div className=\"DetailPage\">\n            <div className = 'FilmContainer'>\n                <div className=\"FilmImage\">\n                    <img src={IMAGE_BASE_URL + film.poster_path}\n                        className ='InfoPoster'\n                        alt= {film.id}\n                        key = {film.id}\n                        width=\"200\" \n                        ></img>\n                </div>\n                <div className = 'FilmDescription'> \n                    <span className=\"Original_Title\">{film.original_title}</span>\n                    <span className=\"Release_Date\">{film.release_date}</span> \n                    <span className = 'Genre'>{Genre}</span>                  \n                    <span className=\"Vote_Average\">{Rating}</span>\n                    <span className=\"FilmHomepageUrl\">Film Homepage: {film.homepage===''? 'N/A': film.homepage }</span>\n                    <span className=\"FilmOverview\">{film.overview}</span>                   \n                </div>\n                \n            </div>\n                <div className = \"CommentContent\">\n                {film.myComment.map((comment) =>\n                    <>\n                    <div>\n                    <span className = \"CommentContent\" >{comment[0]}</span>\n                    <span className = \"CommentUserTime\" >By {comment[1]}     {comment[2]}</span>\n                    </div>\n                    </>\n                )}\n                </div>\n            <select className = 'LanguageDropDownMenu' \n            onChange = {(e) => {setLanguage(e.target.value)}} >\n                \n                <option className = \"Option\" value=\"en\" >English</option>\n                <option className = \"Option\" value=\"zh\" >Chinese</option>\n                <option className = \"Option\" value=\"fr\" >French</option>\n                <option className = \"Option\" value=\"ja\" >Japanese</option>\n                <option className = \"Option\" value=\"la\" >Latin</option>\n                <option className = \"Option\" value=\"ar\" >Arabic</option>\n                <option className = \"Option\" value=\"es\" >Spanish</option>\n                <option className = \"Option\" value=\"ko\" >Korean</option>\n                <option className = \"Option\" value=\"el\" >Greek</option>\n                <option className = \"Option\" value=\"uk\" >Ukranian</option>\n                <option className = \"Option\" value=\"th\" >Thai</option>\n                <option className = \"Option\" value=\"cs\" >Czech</option>\n                <option className = \"Option\" value=\"is\" >Icelandic</option>\n                <option className = \"Option\" value=\"ga\" >Irish</option>\n                <option className = \"Option\" value=\"vi\" >Vietnamese</option>   \n            </select>\n            \n            <div className=\"CommentDiv\">\n                <input type=\"text\" \n                value = {originalComment}\n                className = \"CommentInput\"\n                onInput={ (e) => {\n                    setoriginalComment(e.target.value);                \n                }}\n                placeholder = {language? `Comment with language code: ${language}`:`Comment here`}\n                />  \n                <button \n                onClick = {() =>{\n                    \n                    //props.addCommentedFilm(film);\n                    props.convertComment(language,originalComment);\n                    setoriginalComment(\"\");   \n                }}>comment</button>        \n            </div>\n            <div><button className = \"GoBackBtn\" onClick = {() => props.goBack(false)}>back</button></div>\n            <span className = 'YandexCredit' >Powered by <a className = \"Link\" href = \"https://translate.yandex.com/\">Yandex.Translate</a></span>\n        </div>\n    )\n}\n\nexport default FilmDetail\n","import React from 'react'\nimport { useState } from 'react';\n\nfunction SearchFilm(props) {\n    const [inputValue, setinputValue] = useState(\"\");\n    return (\n        <div className=\"SearchDiv\">\n          <input className = 'InputFilmName' \n          placeholder = 'Search For Your Favorite Movie!'\n          value = {inputValue}\n          onInput={ (e) => setinputValue(e.target.value) }\n          />\n          <button className = 'SeacrhButton'\n           onClick ={() => {\n               props.updateStatus(true);\n               props.updateInput(inputValue);\n               setinputValue(\"\");\n               }}>Search</button>\n        </div> \n    )\n}\n\nexport default SearchFilm\n","import React, {useState} from 'react'\n\nfunction LoginPage(props) {\n    const [inputValue, setinputValue] = useState(\"\");\n    const [loginPrompt, setloginPrompt] = useState(\"\");\n    return (\n        <div className=\"LoginPageDiv\">\n          <input className = 'UserNameInput' \n          placeholder = 'Enter Your Username'\n          value = {inputValue}\n          onInput={ (e) => setinputValue(e.target.value) }\n          />\n          <button className = 'LoginButton'\n           onClick ={() => {\n               if(inputValue === ''||inputValue.toUpperCase() === 'VUE'||inputValue.toUpperCase() === 'ANGULAR'){\n                props.updateLoginStatus(false);\n                setloginPrompt('UserName Cannot Be Vue or Angular or Null');\n               }else{\n                setloginPrompt('');\n                props.updateLoginStatus(true);\n                props.updateUserName(inputValue);\n               }\n               setinputValue(\"\");  \n               }}>Login</button>\n               <span>{loginPrompt}</span>\n        </div> \n    )\n}\n\nexport default LoginPage\n","import React from 'react';\n\nfunction LogOut(props) {\n    return (\n        <div className = \"LogoutButtonDiv\">\n           <button className = \"LogoutButton\" onClick = {\n           () => {props.changeStatus(false);}\n           }>LogOut</button>\n        </div>\n    )\n}\n\nexport default LogOut;\n","import React from 'react'\n\nconst IMAGE_BASE_URL = 'https://image.tmdb.org/t/p/original/';\nfunction CommentedFilms(props) {\n    // console.log('films in commented: ',props.films);\n    const films = props.films;\n    return (\n        <div className = 'CommentedFilmsContainer'>\n            \n           {Object.keys(films).map(id => \n           <>\n           \n             <div className = 'film' key = {films[id].id} name = {films[id].original_title} \n             onClick = {() => props.getFilmInfo(films[id].id) }>\n                   <img  src={IMAGE_BASE_URL + films[id].poster_path}\n                       alt= {films[id].id}\n                       key = {films[id].id}\n                       width=\"190\" \n                       \n                       ></img>\n                <span id ={films[id].id} className = \"DisplayFilmName\">{films[id].original_title}</span>\n               </div>\n               \n             \n           </>\n               )}        \n        </div>\n    )\n}\n\nexport default CommentedFilms\n","import React from 'react';\nimport {useState, useEffect} from 'react';\nimport './App.css';\nimport FilmPosterDisplay from './components/FilmPosterDisplay';\nimport FilmDetail from './components/FilmDetail';\nimport SearchFilm from './components/SearchFilm';\nimport LoginPage from './components/LoginPage';\nimport LogOut from './components/LogOut';\nimport CommentedFilms from './components/CommentedFilms';\n\nconst {\n  fetchTopRatedFilmInfo, \n  fetchSingleFilmInfo,\n  fetchFilmByName,\n  fetchTranslation,\n  fetchSession,\n  fetchLogin,\n  fetchLogout,\n  fetchCommentedFilmList,\n  fetchAddCommentedFilm\n} = require('./service');\n\nfunction App() {\n  const CurrentTime = new Date().toLocaleString();\n  const [page, setPage] = useState(1);\n  const [done, setDone] = useState(false);\n  const [searchPage, setSearchPage] = useState(1);\n  const [filmName,setFilmName] = useState('');\n  const [userName,setUserName] = useState('');\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [fetchedFilms, setFetchedFilms] = useState({results:[]});\n  const [onInfoPage, setonInfoPage] = useState(false);\n  const [onSearch, setOnSearch] = useState(false);\n  const [convertedComment, setConvertedComment] = useState('');\n  const [commentedFilms, setCommentedFilms] = useState({});\n  const [film,setFilm] = useState({\n    original_title: '', \n    posterpath: '', \n    overview: '', \n    release_date: '',\n    vote_average: '',\n    vote_count: '',\n    homepage: '',\n    genres: '',\n    myComment: []\n})\n\n  const REMINDER = '<- scroll to see more ->';\n  useEffect(() => {\n    fetchSession()\n      .then(\n        fetchCommentedFilmList()\n    .then(results =>{\n      setCommentedFilms(results);\n      console.log(\"collection from sfetchCommentedFilmList:\",results);\n    }))\n    .catch(e => {\n      //FIXME\n      console.log(e);\n      }) \n    \n  }, [convertedComment,isLoggedIn,film])\n\n  useEffect(()=>{\n    fetchTopRatedFilmInfo(page)\n  .then(films =>\n    { if(films){\n      console.log(\"Top Rated Films collected\");   \n    }else{\n      console.log('No films');     \n      }\n      setSearchPage(1);\n      setFetchedFilms(films);\n      setOnSearch(false);\n   //console.log(\"collection from fetchTopRatedFilmInfo\",films);\n  })    \n}, [page,isLoggedIn]) \n\nuseEffect(()=>{\n  fetchFilmByName(filmName, searchPage)\n.then(films =>\n  { if(films){\n    console.log(\"Seachrd Results collected\");   \n  }else{\n    console.log('No films');     \n    }\n    setOnSearch(true);\n    setPage(1);\n    setFetchedFilms(films);\n  //console.log(\"collection from fetchTopRatedFilmInfo\",films);\n})    \n}, [filmName,searchPage]) \n\n\n return (\n    <div className=\"Final-Project-App\">\n      <h1>Multilingual Film Review App</h1>\n      {!isLoggedIn && <LoginPage\n          updateLoginStatus = {(status) => setIsLoggedIn(status)}\n          updateUserName = {(username) =>{\n            setUserName(username);\n            fetchLogin(username)\n                .then(console.log('userName:',username))\n                .catch(e => {\n                  //FIXME\n                  console.log(e);\n                })\n          }}\n      />}\n      {(!onInfoPage && isLoggedIn)&& <div className=\"HomePage\">\n        <SearchFilm\n        updateInput = {filmName =>{\n          setFilmName(filmName);\n          setSearchPage(1);\n          setPage(1);\n          fetchFilmByName(filmName,searchPage)\n          .then(films =>\n            { if(films){\n              console.log(\"Top Rated Films collected\");   \n            }else{\n              console.log('No films');     \n              }\n\n              setFetchedFilms(films);\n            console.log(\"collection from fetchFilmByName\",films);\n          })\n        }}\n        updateStatus = {status => setOnSearch(status)}\n        />     \n      <h3>{onSearch? \"Search Results\" : \"Top Rated Films\"}</h3>\n      <div className = 'imageList'>\n        <FilmPosterDisplay  \n        films = {fetchedFilms.results}\n        getFilmInfo = { id =>{\n          fetchSingleFilmInfo(id)\n          .then(film => {\n            setFilm(film);\n            setonInfoPage(true);\n            \n          })\n        }}/>\n        </div>  \n        <span className = 'scrollReminder' >{REMINDER}</span>\n        <div className=\"ControlPage\">\n          <button className=\"PrevPageBtn\"\n          disabled = {page===1&&searchPage===1?true:false}\n          onClick = {()=>{\n            if(onSearch){  setSearchPage(searchPage-1);\n            }else{  setPage(page-1);\n            }\n          }}\n          >Prev</button>\n          <button className=\"NextPageBtn\"\n          onClick = {()=>{\n            if(onSearch){ setSearchPage(searchPage+1);\n            }else{setPage(page+1);\n            }  \n          }}\n          >Next</button>\n        </div>\n        <h3 className = \"CommentHeader\">\n          {Object.keys(commentedFilms).length ===0 ?\n           `${userName}, You Have No Recently Commented Films`:`${userName}'s Recently Commented Film` }\n          </h3>\n        <div className = 'CommentedList'>\n          <CommentedFilms  \n        films = {commentedFilms}\n        getFilmInfo = { id =>{\n          setFilm(commentedFilms[id]);\n          setonInfoPage(true);\n        }}/>\n        </div>\n        \n        <div className=\"LogOut\">\n        <LogOut changeStatus = {status => {\n              setIsLoggedIn(status);\n              setUserName('');\n              fetchLogout()\n              .then(console.log(\"User Logged out\"))\n              .catch(e => {\n                //FIXME\n                console.log(e);\n              })\n              }}/>\n        </div>\n        \n        </div>}\n        {onInfoPage && <FilmDetail \n        film = {film}\n        userName = {userName}\n        convertComment = {(language,comment)=>{         \n          fetchTranslation(language,comment)\n          .then(converted =>{\n            const tmp_film = {...film};\n            if(!tmp_film.myComment){\n            tmp_film.myComment = [];\n            tmp_film.myComment.push([converted.text[0],userName,CurrentTime]);\n          }else{\n            tmp_film.myComment.push([converted.text[0],userName,CurrentTime]);\n          }\n            setConvertedComment(converted.text[0]);\n            return tmp_film;\n            \n          })\n          .then( tmp_film => {fetchAddCommentedFilm(tmp_film)\n            .then( tmp_film => {   \n              console.log('added film id', tmp_film.id);\n              //console.log('added film Comment ', film.myComment)\n              setCommentedFilms({ ...commentedFilms, tmp_film });\n              console.log(commentedFilms);\n              setFilm(tmp_film);\n              setDone(true);\n        })\n        .catch(e => {\n          //FIXME\n          console.log(e);\n        })}\n          \n          )\n          \n        }}\n        Done = {done}\n        goBack = {value => setonInfoPage(value)}\n        />}\n        <span className = 'Credit' >Powered by <a className = \"Link\" href = \"https://www.themoviedb.org/\">The Movie Database (TMDB)</a></span>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}